/*
 * Copyright 2020-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
	id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
}
apply from: '../gradle/common.gradle'
apply from: '../gradle/docker.gradle'


repositories {
    jcenter()
    mavenCentral()
    flatDir {
        dirs '../gradle/localrepo'
    }
}


application {
    mainClassName = 'hu.perit.eventlogservicetester.EventLogServicetesterApplication'
    // Some JVM options already set in common.gradle
    applicationDefaultJvmArgs += ['-Xmx1g', '-Xms32m']
}


sourceCompatibility = 11

dependencies {
	compile project(':spvitamin-core')
	compile project(':spvitamin-spring-general')

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter'

    // apache.commons
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'

    // Log4J
    implementation('log4j:log4j:1.2.17')

    // Test framework
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}


test {
    useJUnitPlatform()
}
