/*
 * Copyright 2020-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
	id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
}

ext {
	// Itt will be used to prefix docker image name
	set('imagePrefix', 'kafkastudy')
	set('spvitaminVersion', '1.1.0-RELEASE')
}

apply from: '../gradle/common.gradle'
apply from: '../gradle/docker.gradle'


repositories {
    jcenter()
    mavenCentral()
    flatDir {
        dirs '../gradle/localrepo'
    }
	maven {
        url "http://perit.hu/maven"
    }
}


application {
    mainClassName = 'hu.perit.eventlogservice.EventLogServiceApplication'
    // Some JVM options already set in common.gradle
    applicationDefaultJvmArgs += ['-Xmx512m', '-Xms32m']
}


sourceCompatibility = 11

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
	// Spvitamin
	implementation 'hu.perit.spvitamin:spvitamin-core'
	implementation 'hu.perit.spvitamin:spvitamin-spring-server'
	implementation 'hu.perit.spvitamin:spvitamin-spring-admin'
	implementation 'hu.perit.spvitamin:spvitamin-spring-security'
				
    // JJWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // Swagger
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    // apache.commons
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    // Validation
    implementation 'javax.validation:validation-api'

	// FasterXML
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    
    // YAML formatting
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    // Micrometer Prometheus plugin
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.5.3'
	
    // Slf4J
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	
	// Kafka
	implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.7.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


dependencyManagement {
    imports {
        mavenBom "hu.perit.spvitamin:spvitamin-dependencies:${spvitaminVersion}"
    }
}


test {
	useJUnitPlatform()
}


dockerImage() {
	dependsOn 'dockerBackendImage'
}
